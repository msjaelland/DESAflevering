<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DesRunningSampleDataSet" targetNamespace="http://tempuri.org/DesRunningSampleDataSet.xsd" xmlns:mstns="http://tempuri.org/DesRunningSampleDataSet.xsd" xmlns="http://tempuri.org/DesRunningSampleDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DesRunningSampleConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DesRunningSampleConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.StudentGUIWPF.Properties.Settings.GlobalReference.Default.DesRunningSampleConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CalendarEntrySetTableAdapter" GeneratorDataComponentClassName="CalendarEntrySetTableAdapter" Name="CalendarEntrySet" UserDataComponentName="CalendarEntrySetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.CalendarEntrySet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CalendarEntrySet] WHERE (([Id] = @Original_Id) AND ([Day] = @Original_Day) AND ([CourseId] = @Original_CourseId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CalendarEntrySet] ([Day], [StartHour], [EndHour], [CourseId]) VALUES (@Day, @StartHour, @EndHour, @CourseId);
SELECT Id, Day, StartHour, EndHour, CourseId FROM CalendarEntrySet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StartHour" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StartHour" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EndHour" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EndHour" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Day, StartHour, EndHour, CourseId FROM dbo.CalendarEntrySet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CalendarEntrySet] SET [Day] = @Day, [StartHour] = @StartHour, [EndHour] = @EndHour, [CourseId] = @CourseId WHERE (([Id] = @Original_Id) AND ([Day] = @Original_Day) AND ([CourseId] = @Original_CourseId));
SELECT Id, Day, StartHour, EndHour, CourseId FROM CalendarEntrySet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@StartHour" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="StartHour" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EndHour" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EndHour" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DesRunningSample.dbo.CalendarEntrySet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Day" DataSetColumn="Day" />
              <Mapping SourceColumn="StartHour" DataSetColumn="StartHour" />
              <Mapping SourceColumn="EndHour" DataSetColumn="EndHour" />
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseSetTableAdapter" GeneratorDataComponentClassName="CourseSetTableAdapter" Name="CourseSet" UserDataComponentName="CourseSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.CourseSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CourseSet] WHERE (([Id] = @Original_Id) AND ([Instance] = @Original_Instance) AND ([InstanceYear] = @Original_InstanceYear) AND ([ECTS] = @Original_ECTS) AND ([TeacherId] = @Original_TeacherId) AND ((@IsNull_Teacher_Id = 1 AND [Teacher_Id] IS NULL) OR ([Teacher_Id] = @Original_Teacher_Id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Instance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Instance" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ECTS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ECTS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CourseSet] ([Name], [Instance], [InstanceYear], [Description], [ECTS], [TeacherId], [Teacher_Id]) VALUES (@Name, @Instance, @InstanceYear, @Description, @ECTS, @TeacherId, @Teacher_Id);
SELECT Id, Name, Instance, InstanceYear, Description, ECTS, TeacherId, Teacher_Id FROM CourseSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Instance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Instance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstanceYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ECTS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ECTS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Instance, InstanceYear, Description, ECTS, TeacherId, Teacher_Id FROM dbo.CourseSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CourseSet] SET [Name] = @Name, [Instance] = @Instance, [InstanceYear] = @InstanceYear, [Description] = @Description, [ECTS] = @ECTS, [TeacherId] = @TeacherId, [Teacher_Id] = @Teacher_Id WHERE (([Id] = @Original_Id) AND ([Instance] = @Original_Instance) AND ([InstanceYear] = @Original_InstanceYear) AND ([ECTS] = @Original_ECTS) AND ([TeacherId] = @Original_TeacherId) AND ((@IsNull_Teacher_Id = 1 AND [Teacher_Id] IS NULL) OR ([Teacher_Id] = @Original_Teacher_Id)));
SELECT Id, Name, Instance, InstanceYear, Description, ECTS, TeacherId, Teacher_Id FROM CourseSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Instance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Instance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InstanceYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ECTS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ECTS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Instance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Instance" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InstanceYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InstanceYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ECTS" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ECTS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Teacher_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Teacher_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DesRunningSample.dbo.CourseSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Instance" DataSetColumn="Instance" />
              <Mapping SourceColumn="InstanceYear" DataSetColumn="InstanceYear" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
              <Mapping SourceColumn="ECTS" DataSetColumn="ECTS" />
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
              <Mapping SourceColumn="Teacher_Id" DataSetColumn="Teacher_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamSetTableAdapter" GeneratorDataComponentClassName="ExamSetTableAdapter" Name="ExamSet" UserDataComponentName="ExamSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.ExamSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExamSet] WHERE (([Id] = @Original_Id) AND ([Type] = @Original_Type) AND ([Grade] = @Original_Grade) AND ([Course_Id] = @Original_Course_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExamSet] ([Type], [Grade], [Course_Id]) VALUES (@Type, @Grade, @Course_Id);
SELECT Id, Type, Grade, Course_Id FROM ExamSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Type, Grade, Course_Id FROM dbo.ExamSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExamSet] SET [Type] = @Type, [Grade] = @Grade, [Course_Id] = @Course_Id WHERE (([Id] = @Original_Id) AND ([Type] = @Original_Type) AND ([Grade] = @Original_Grade) AND ([Course_Id] = @Original_Course_Id));
SELECT Id, Type, Grade, Course_Id FROM ExamSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Type" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Grade" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DesRunningSample.dbo.ExamSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
              <Mapping SourceColumn="Grade" DataSetColumn="Grade" />
              <Mapping SourceColumn="Course_Id" DataSetColumn="Course_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSetTableAdapter" GeneratorDataComponentClassName="PersonSetTableAdapter" Name="PersonSet" UserDataComponentName="PersonSetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.PersonSet" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet] ([Name], [FamilyName], [Email]) VALUES (@Name, @FamilyName, @Email);
SELECT Id, Name, FamilyName, Email FROM PersonSet WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FamilyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FamilyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, FamilyName, Email FROM dbo.PersonSet</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet] SET [Name] = @Name, [FamilyName] = @FamilyName, [Email] = @Email WHERE (([Id] = @Original_Id));
SELECT Id, Name, FamilyName, Email FROM PersonSet WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FamilyName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FamilyName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="DesRunningSample.dbo.PersonSet" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="FamilyName" DataSetColumn="FamilyName" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSet_StudentTableAdapter" GeneratorDataComponentClassName="PersonSet_StudentTableAdapter" Name="PersonSet_Student" UserDataComponentName="PersonSet_StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.PersonSet_Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet_Student] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet_Student] ([Id]) VALUES (@Id);
SELECT Id FROM PersonSet_Student WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id FROM dbo.PersonSet_Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet_Student] SET [Id] = @Id WHERE (([Id] = @Original_Id));
SELECT Id FROM PersonSet_Student WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonSet_TeacherTableAdapter" GeneratorDataComponentClassName="PersonSet_TeacherTableAdapter" Name="PersonSet_Teacher" UserDataComponentName="PersonSet_TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.PersonSet_Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PersonSet_Teacher] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PersonSet_Teacher] ([Id]) VALUES (@Id);
SELECT Id FROM PersonSet_Teacher WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id FROM dbo.PersonSet_Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PersonSet_Teacher] SET [Id] = @Id WHERE (([Id] = @Original_Id));
SELECT Id FROM PersonSet_Teacher WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentCourseTableAdapter" GeneratorDataComponentClassName="StudentCourseTableAdapter" Name="StudentCourse" UserDataComponentName="StudentCourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.StudentCourse" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentCourse] WHERE (([Student_Id] = @Original_Student_Id) AND ([Course_Id] = @Original_Course_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentCourse] ([Student_Id], [Course_Id]) VALUES (@Student_Id, @Course_Id);
SELECT Student_Id, Course_Id FROM StudentCourse WHERE (Course_Id = @Course_Id) AND (Student_Id = @Student_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Student_Id, Course_Id FROM dbo.StudentCourse</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentCourse] SET [Student_Id] = @Student_Id, [Course_Id] = @Course_Id WHERE (([Student_Id] = @Original_Student_Id) AND ([Course_Id] = @Original_Course_Id));
SELECT Student_Id, Course_Id FROM StudentCourse WHERE (Course_Id = @Course_Id) AND (Student_Id = @Student_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Student_Id" DataSetColumn="Student_Id" />
              <Mapping SourceColumn="Course_Id" DataSetColumn="Course_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentExamTableAdapter" GeneratorDataComponentClassName="StudentExamTableAdapter" Name="StudentExam" UserDataComponentName="StudentExamTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DesRunningSampleConnectionString (Settings)" DbObjectName="DesRunningSample.dbo.StudentExam" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentExam] WHERE (([Student_Id] = @Original_Student_Id) AND ([Exam_Id] = @Original_Exam_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exam_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exam_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentExam] ([Student_Id], [Exam_Id]) VALUES (@Student_Id, @Exam_Id);
SELECT Student_Id, Exam_Id FROM StudentExam WHERE (Exam_Id = @Exam_Id) AND (Student_Id = @Student_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exam_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exam_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Student_Id, Exam_Id FROM dbo.StudentExam</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentExam] SET [Student_Id] = @Student_Id, [Exam_Id] = @Exam_Id WHERE (([Student_Id] = @Original_Student_Id) AND ([Exam_Id] = @Original_Exam_Id));
SELECT Student_Id, Exam_Id FROM StudentExam WHERE (Exam_Id = @Exam_Id) AND (Student_Id = @Student_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Exam_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exam_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Exam_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Exam_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Student_Id" DataSetColumn="Student_Id" />
              <Mapping SourceColumn="Exam_Id" DataSetColumn="Exam_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DesRunningSampleDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DesRunningSampleDataSet" msprop:Generator_UserDSName="DesRunningSampleDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CalendarEntrySet" msprop:Generator_TableClassName="CalendarEntrySetDataTable" msprop:Generator_TableVarName="tableCalendarEntrySet" msprop:Generator_TablePropName="CalendarEntrySet" msprop:Generator_RowDeletingName="CalendarEntrySetRowDeleting" msprop:Generator_RowChangingName="CalendarEntrySetRowChanging" msprop:Generator_RowEvHandlerName="CalendarEntrySetRowChangeEventHandler" msprop:Generator_RowDeletedName="CalendarEntrySetRowDeleted" msprop:Generator_UserTableName="CalendarEntrySet" msprop:Generator_RowChangedName="CalendarEntrySetRowChanged" msprop:Generator_RowEvArgName="CalendarEntrySetRowChangeEvent" msprop:Generator_RowClassName="CalendarEntrySetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Day" msprop:Generator_ColumnVarNameInTable="columnDay" msprop:Generator_ColumnPropNameInRow="Day" msprop:Generator_ColumnPropNameInTable="DayColumn" msprop:Generator_UserColumnName="Day" type="xs:int" />
              <xs:element name="StartHour" msprop:Generator_ColumnVarNameInTable="columnStartHour" msprop:Generator_ColumnPropNameInRow="StartHour" msprop:Generator_ColumnPropNameInTable="StartHourColumn" msprop:Generator_UserColumnName="StartHour">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EndHour" msprop:Generator_ColumnVarNameInTable="columnEndHour" msprop:Generator_ColumnPropNameInRow="EndHour" msprop:Generator_ColumnPropNameInTable="EndHourColumn" msprop:Generator_UserColumnName="EndHour">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseId" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" msprop:Generator_UserColumnName="CourseId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CourseSet" msprop:Generator_TableClassName="CourseSetDataTable" msprop:Generator_TableVarName="tableCourseSet" msprop:Generator_TablePropName="CourseSet" msprop:Generator_RowDeletingName="CourseSetRowDeleting" msprop:Generator_RowChangingName="CourseSetRowChanging" msprop:Generator_RowEvHandlerName="CourseSetRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseSetRowDeleted" msprop:Generator_UserTableName="CourseSet" msprop:Generator_RowChangedName="CourseSetRowChanged" msprop:Generator_RowEvArgName="CourseSetRowChangeEvent" msprop:Generator_RowClassName="CourseSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Instance" msprop:Generator_ColumnVarNameInTable="columnInstance" msprop:Generator_ColumnPropNameInRow="Instance" msprop:Generator_ColumnPropNameInTable="InstanceColumn" msprop:Generator_UserColumnName="Instance" type="xs:int" />
              <xs:element name="InstanceYear" msprop:Generator_ColumnVarNameInTable="columnInstanceYear" msprop:Generator_ColumnPropNameInRow="InstanceYear" msprop:Generator_ColumnPropNameInTable="InstanceYearColumn" msprop:Generator_UserColumnName="InstanceYear" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ECTS" msprop:Generator_ColumnVarNameInTable="columnECTS" msprop:Generator_ColumnPropNameInRow="ECTS" msprop:Generator_ColumnPropNameInTable="ECTSColumn" msprop:Generator_UserColumnName="ECTS" type="xs:int" />
              <xs:element name="TeacherId" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" msprop:Generator_UserColumnName="TeacherId" type="xs:int" />
              <xs:element name="Teacher_Id" msprop:Generator_ColumnVarNameInTable="columnTeacher_Id" msprop:Generator_ColumnPropNameInRow="Teacher_Id" msprop:Generator_ColumnPropNameInTable="Teacher_IdColumn" msprop:Generator_UserColumnName="Teacher_Id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExamSet" msprop:Generator_TableClassName="ExamSetDataTable" msprop:Generator_TableVarName="tableExamSet" msprop:Generator_TablePropName="ExamSet" msprop:Generator_RowDeletingName="ExamSetRowDeleting" msprop:Generator_RowChangingName="ExamSetRowChanging" msprop:Generator_RowEvHandlerName="ExamSetRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamSetRowDeleted" msprop:Generator_UserTableName="ExamSet" msprop:Generator_RowChangedName="ExamSetRowChanged" msprop:Generator_RowEvArgName="ExamSetRowChangeEvent" msprop:Generator_RowClassName="ExamSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnPropNameInTable="TypeColumn" msprop:Generator_UserColumnName="Type" type="xs:int" />
              <xs:element name="Grade" msprop:Generator_ColumnVarNameInTable="columnGrade" msprop:Generator_ColumnPropNameInRow="Grade" msprop:Generator_ColumnPropNameInTable="GradeColumn" msprop:Generator_UserColumnName="Grade" type="xs:int" />
              <xs:element name="Course_Id" msprop:Generator_ColumnVarNameInTable="columnCourse_Id" msprop:Generator_ColumnPropNameInRow="Course_Id" msprop:Generator_ColumnPropNameInTable="Course_IdColumn" msprop:Generator_UserColumnName="Course_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet" msprop:Generator_TableClassName="PersonSetDataTable" msprop:Generator_TableVarName="tablePersonSet" msprop:Generator_TablePropName="PersonSet" msprop:Generator_RowDeletingName="PersonSetRowDeleting" msprop:Generator_RowChangingName="PersonSetRowChanging" msprop:Generator_RowEvHandlerName="PersonSetRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSetRowDeleted" msprop:Generator_UserTableName="PersonSet" msprop:Generator_RowChangedName="PersonSetRowChanged" msprop:Generator_RowEvArgName="PersonSetRowChangeEvent" msprop:Generator_RowClassName="PersonSetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FamilyName" msprop:Generator_ColumnVarNameInTable="columnFamilyName" msprop:Generator_ColumnPropNameInRow="FamilyName" msprop:Generator_ColumnPropNameInTable="FamilyNameColumn" msprop:Generator_UserColumnName="FamilyName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet_Student" msprop:Generator_TableClassName="PersonSet_StudentDataTable" msprop:Generator_TableVarName="tablePersonSet_Student" msprop:Generator_TablePropName="PersonSet_Student" msprop:Generator_RowDeletingName="PersonSet_StudentRowDeleting" msprop:Generator_RowChangingName="PersonSet_StudentRowChanging" msprop:Generator_RowEvHandlerName="PersonSet_StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSet_StudentRowDeleted" msprop:Generator_UserTableName="PersonSet_Student" msprop:Generator_RowChangedName="PersonSet_StudentRowChanged" msprop:Generator_RowEvArgName="PersonSet_StudentRowChangeEvent" msprop:Generator_RowClassName="PersonSet_StudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PersonSet_Teacher" msprop:Generator_TableClassName="PersonSet_TeacherDataTable" msprop:Generator_TableVarName="tablePersonSet_Teacher" msprop:Generator_TablePropName="PersonSet_Teacher" msprop:Generator_RowDeletingName="PersonSet_TeacherRowDeleting" msprop:Generator_RowChangingName="PersonSet_TeacherRowChanging" msprop:Generator_RowEvHandlerName="PersonSet_TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonSet_TeacherRowDeleted" msprop:Generator_UserTableName="PersonSet_Teacher" msprop:Generator_RowChangedName="PersonSet_TeacherRowChanged" msprop:Generator_RowEvArgName="PersonSet_TeacherRowChangeEvent" msprop:Generator_RowClassName="PersonSet_TeacherRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentCourse" msprop:Generator_TableClassName="StudentCourseDataTable" msprop:Generator_TableVarName="tableStudentCourse" msprop:Generator_TablePropName="StudentCourse" msprop:Generator_RowDeletingName="StudentCourseRowDeleting" msprop:Generator_RowChangingName="StudentCourseRowChanging" msprop:Generator_RowEvHandlerName="StudentCourseRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentCourseRowDeleted" msprop:Generator_UserTableName="StudentCourse" msprop:Generator_RowChangedName="StudentCourseRowChanged" msprop:Generator_RowEvArgName="StudentCourseRowChangeEvent" msprop:Generator_RowClassName="StudentCourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Student_Id" msprop:Generator_ColumnVarNameInTable="columnStudent_Id" msprop:Generator_ColumnPropNameInRow="Student_Id" msprop:Generator_ColumnPropNameInTable="Student_IdColumn" msprop:Generator_UserColumnName="Student_Id" type="xs:int" />
              <xs:element name="Course_Id" msprop:Generator_ColumnVarNameInTable="columnCourse_Id" msprop:Generator_ColumnPropNameInRow="Course_Id" msprop:Generator_ColumnPropNameInTable="Course_IdColumn" msprop:Generator_UserColumnName="Course_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentExam" msprop:Generator_TableClassName="StudentExamDataTable" msprop:Generator_TableVarName="tableStudentExam" msprop:Generator_TablePropName="StudentExam" msprop:Generator_RowDeletingName="StudentExamRowDeleting" msprop:Generator_RowChangingName="StudentExamRowChanging" msprop:Generator_RowEvHandlerName="StudentExamRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentExamRowDeleted" msprop:Generator_UserTableName="StudentExam" msprop:Generator_RowChangedName="StudentExamRowChanged" msprop:Generator_RowEvArgName="StudentExamRowChangeEvent" msprop:Generator_RowClassName="StudentExamRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Student_Id" msprop:Generator_ColumnVarNameInTable="columnStudent_Id" msprop:Generator_ColumnPropNameInRow="Student_Id" msprop:Generator_ColumnPropNameInTable="Student_IdColumn" msprop:Generator_UserColumnName="Student_Id" type="xs:int" />
              <xs:element name="Exam_Id" msprop:Generator_ColumnVarNameInTable="columnExam_Id" msprop:Generator_ColumnPropNameInRow="Exam_Id" msprop:Generator_ColumnPropNameInTable="Exam_IdColumn" msprop:Generator_UserColumnName="Exam_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CalendarEntrySet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="CourseSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CourseSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="ExamSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExamSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet_Student" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PersonSet_Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PersonSet_Teacher" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="StudentCourse_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentCourse" />
      <xs:field xpath="mstns:Student_Id" />
      <xs:field xpath="mstns:Course_Id" />
    </xs:unique>
    <xs:unique name="StudentExam_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentExam" />
      <xs:field xpath="mstns:Student_Id" />
      <xs:field xpath="mstns:Exam_Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_CourseCalendarEntry" msdata:parent="CourseSet" msdata:child="CalendarEntrySet" msdata:parentkey="Id" msdata:childkey="CourseId" msprop:Generator_UserChildTable="CalendarEntrySet" msprop:Generator_ChildPropName="GetCalendarEntrySetRows" msprop:Generator_UserRelationName="FK_CourseCalendarEntry" msprop:Generator_RelationVarName="relationFK_CourseCalendarEntry" msprop:Generator_UserParentTable="CourseSet" msprop:Generator_ParentPropName="CourseSetRow" />
      <msdata:Relationship name="FK_CourseTeacher" msdata:parent="PersonSet_Teacher" msdata:child="CourseSet" msdata:parentkey="Id" msdata:childkey="Teacher_Id" msprop:Generator_UserChildTable="CourseSet" msprop:Generator_ChildPropName="GetCourseSetRows" msprop:Generator_UserRelationName="FK_CourseTeacher" msprop:Generator_RelationVarName="relationFK_CourseTeacher" msprop:Generator_UserParentTable="PersonSet_Teacher" msprop:Generator_ParentPropName="PersonSet_TeacherRow" />
      <msdata:Relationship name="FK_ExamCourse" msdata:parent="CourseSet" msdata:child="ExamSet" msdata:parentkey="Id" msdata:childkey="Course_Id" msprop:Generator_UserChildTable="ExamSet" msprop:Generator_ChildPropName="GetExamSetRows" msprop:Generator_UserRelationName="FK_ExamCourse" msprop:Generator_ParentPropName="CourseSetRow" msprop:Generator_RelationVarName="relationFK_ExamCourse" msprop:Generator_UserParentTable="CourseSet" />
      <msdata:Relationship name="FK_Student_inherits_Person" msdata:parent="PersonSet" msdata:child="PersonSet_Student" msdata:parentkey="Id" msdata:childkey="Id" msprop:Generator_UserChildTable="PersonSet_Student" msprop:Generator_ChildPropName="GetPersonSet_StudentRows" msprop:Generator_UserRelationName="FK_Student_inherits_Person" msprop:Generator_ParentPropName="PersonSetRow" msprop:Generator_RelationVarName="relationFK_Student_inherits_Person" msprop:Generator_UserParentTable="PersonSet" />
      <msdata:Relationship name="FK_Teacher_inherits_Person" msdata:parent="PersonSet" msdata:child="PersonSet_Teacher" msdata:parentkey="Id" msdata:childkey="Id" msprop:Generator_UserChildTable="PersonSet_Teacher" msprop:Generator_ChildPropName="GetPersonSet_TeacherRows" msprop:Generator_UserRelationName="FK_Teacher_inherits_Person" msprop:Generator_ParentPropName="PersonSetRow" msprop:Generator_RelationVarName="relationFK_Teacher_inherits_Person" msprop:Generator_UserParentTable="PersonSet" />
      <msdata:Relationship name="FK_StudentCourse_Course" msdata:parent="CourseSet" msdata:child="StudentCourse" msdata:parentkey="Id" msdata:childkey="Course_Id" msprop:Generator_UserChildTable="StudentCourse" msprop:Generator_ChildPropName="GetStudentCourseRows" msprop:Generator_UserRelationName="FK_StudentCourse_Course" msprop:Generator_ParentPropName="CourseSetRow" msprop:Generator_RelationVarName="relationFK_StudentCourse_Course" msprop:Generator_UserParentTable="CourseSet" />
      <msdata:Relationship name="FK_StudentCourse_Student" msdata:parent="PersonSet_Student" msdata:child="StudentCourse" msdata:parentkey="Id" msdata:childkey="Student_Id" msprop:Generator_UserChildTable="StudentCourse" msprop:Generator_ChildPropName="GetStudentCourseRows" msprop:Generator_UserRelationName="FK_StudentCourse_Student" msprop:Generator_ParentPropName="PersonSet_StudentRow" msprop:Generator_RelationVarName="relationFK_StudentCourse_Student" msprop:Generator_UserParentTable="PersonSet_Student" />
      <msdata:Relationship name="FK_StudentExam_Exam" msdata:parent="ExamSet" msdata:child="StudentExam" msdata:parentkey="Id" msdata:childkey="Exam_Id" msprop:Generator_UserChildTable="StudentExam" msprop:Generator_ChildPropName="GetStudentExamRows" msprop:Generator_UserRelationName="FK_StudentExam_Exam" msprop:Generator_ParentPropName="ExamSetRow" msprop:Generator_RelationVarName="relationFK_StudentExam_Exam" msprop:Generator_UserParentTable="ExamSet" />
      <msdata:Relationship name="FK_StudentExam_Student" msdata:parent="PersonSet_Student" msdata:child="StudentExam" msdata:parentkey="Id" msdata:childkey="Student_Id" msprop:Generator_UserChildTable="StudentExam" msprop:Generator_ChildPropName="GetStudentExamRows" msprop:Generator_UserRelationName="FK_StudentExam_Student" msprop:Generator_ParentPropName="PersonSet_StudentRow" msprop:Generator_RelationVarName="relationFK_StudentExam_Student" msprop:Generator_UserParentTable="PersonSet_Student" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>